{
	"info": {
		"_postman_id": "e150837e-6c71-4922-80ae-7c36796418f1",
		"name": "Drts init API's Collections",
		"description": "This document outlines how to structure a Postman collection to test the authentication APIs provided in the Django + React + TypeScript starter project using JWT.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32876258"
	},
	"item": [
		{
			"name": "Account Management",
			"item": [
				{
					"name": "Signup",
					"item": [
						{
							"name": "Signup",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "shaileshpandit141@gmail.com",
											"type": "text"
										},
										{
											"key": "password",
											"value": "shaileshpandit141@",
											"type": "text"
										},
										{
											"key": "confirm_password",
											"value": "shaileshpandit141@",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/auth/signup/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"auth",
										"signup",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Send Account Verification Email",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "shaileshpandit141@gmail.com",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/auth/account-verification/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"auth",
										"account-verification",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Account Verification Confirm",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "token",
											"value": "accoutnverificationtoeknfromemail",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/auth/account-verification/confirm/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"auth",
										"account-verification",
										"confirm",
										""
									]
								}
							},
							"response": []
						}
					],
					"description": "Handles user registration, and account verification."
				},
				{
					"name": "Token",
					"item": [
						{
							"name": "Token Retrive",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const response = pm.response.json()",
											"",
											"pm.globals.set(\"refresh_token\", response.refresh_token)",
											"pm.globals.set(\"access_token\", response.access_token)",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "shaileshpandit141@gmail.com",
											"type": "text"
										},
										{
											"key": "password",
											"value": "shaileshpandit141@",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/auth/token/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"auth",
										"token",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Token Refresh",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"const response = pm.response.json();",
											"pm.globals.set(\"access_token\", response.access_token);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "refresh_token",
											"value": "{{refresh_token}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/auth/token/refresh/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"auth",
										"token",
										"refresh",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Token Block",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "refresh_token",
											"value": "{{refresh_token}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/auth/token/block/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"auth",
										"token",
										"block",
										""
									]
								}
							},
							"response": []
						}
					],
					"description": "Manages access and refresh tokens, including renewal and logout."
				},
				{
					"name": "User",
					"item": [
						{
							"name": "User Details",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{base_url}}/auth/user/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"auth",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update User Details",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "first_name",
											"value": "shailesh",
											"type": "text"
										},
										{
											"key": "last_name",
											"value": "pandit",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/auth/user/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"auth",
										"user",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Deactivate Account",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "password",
											"value": "shaileshpandit141@",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/auth/account-deactivation/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"auth",
										"account-deactivation",
										""
									]
								}
							},
							"response": []
						}
					],
					"description": "Provides endpoints for accessing and modifying authenticated user account details."
				},
				{
					"name": "Password",
					"item": [
						{
							"name": "Password Change",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "current_password",
											"value": "shaileshpandit141@",
											"type": "text"
										},
										{
											"key": "new_password",
											"value": "pandit141@",
											"type": "text"
										},
										{
											"key": "confirm_password",
											"value": "pandit141@",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/auth/password/change/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"auth",
										"password",
										"change",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Password Reset",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "shaileshpandit141@gmail.com",
											"type": "text"
										},
										{
											"key": "reset_confirm_uri",
											"value": "http://localhost:8000",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/auth/password/reset/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"auth",
										"password",
										"reset",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Password Reset Confirm",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "token",
											"value": "eyJ1c2VyX2lkIjoxNywibWF4X2FnZV9zZWNvbmRzIjoxMjAwfQ.aKwIAQ.MGGNqo1sbtOXPNbFWLv-vDdvJyc%7Cbf22bce49ab84e4790000cc776559168",
											"type": "text"
										},
										{
											"key": "new_password",
											"value": "shaileshpandit141@",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{base_url}}/auth/password/reset/confirm/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"auth",
										"password",
										"reset",
										"confirm",
										""
									]
								}
							},
							"response": []
						}
					],
					"description": "Handles password recovery and reset flows for users."
				}
			],
			"description": "Centralized endpoints for handling user identity, including authentication, token handling, password resets, and account management."
		},
		{
			"name": "Records",
			"item": [
				{
					"name": "List",
					"item": [
						{
							"name": "Records",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/records/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"records",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Record/s",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{base_url}}/records/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"records",
										""
									]
								}
							},
							"response": []
						}
					],
					"description": "Handles operations for retrieving multiple \\[entities\\] and creating new ones. Includes support for pagination, filtering, and sorting."
				},
				{
					"name": "Detail",
					"item": [
						{
							"name": "Record By ID",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/records/1/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"records",
										"1",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Record",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{base_url}}/records/1/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"records",
										"1",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Partial Update Record",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{base_url}}/records/1/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"records",
										"1",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Record",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{base_url}}/records/1/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"records",
										"1",
										""
									]
								}
							},
							"response": []
						}
					],
					"description": "Covers operations on individual \\[entity\\] records by ID, including retrieval, full/partial updates, and deletion."
				}
			],
			"description": "Contains grouped API endpoints for managing \\[entities\\], including both collection-level and individual record operations."
		}
	]
}